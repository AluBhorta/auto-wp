version: 0.2

phases:
  install:
    runtime-versions:
      php: 7.3
  pre_build:
    commands:
      - echo Running Pre-Build script on `date`
      - echo "default region - $AWS_DEFAULT_REGION"
      - echo "registry uri - $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
      - echo Logging in to Amazon ECR...
      # - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPOSITORY_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "image tag -> $REPOSITORY_URI:$IMAGE_TAG"
      - echo Ending prebuild on `date`
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --target production -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
      - echo Build completed on `date`
  post_build:
    commands:
      - echo Starting post build on `date`
      - echo Pushing the Docker image - $REPOSITORY_URI:$IMAGE_TAG and $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - |
        printf '[{"name":"php","imageUri":"%s"}]' \
        $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
